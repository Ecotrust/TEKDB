"""
Django settings for TEKDB project.

Generated by 'django-admin startproject' using Django 1.10.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
from glob import glob

try:
    GDAL_LIBRARY_PATH=glob('/usr/lib/libgdal.so.*')[0]
    GEOS_LIBRARY_PATH=glob('/usr/lib/libgeos_c.so.*')[0]
except IndexError as e:
    pass


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY", default="set in local_settings.py")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = int(os.environ.get("DEBUG", default=1))

ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS", default='*').split(" ")


# Application definition

INSTALLED_APPS = [
    'dal',
    'dal_select2',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.gis',
    # 'registration',
    'leaflet',
    'nested_admin',
    'ckeditor',
    'explore',
    'login',
    'TEKDB',
    'Lookup',
    'Accounts',
    'Relationships',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'TEKDB.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'login/templates'),
            os.path.join(BASE_DIR, 'explore/templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.media',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'TEKDB.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases
DATABASES = {
    'default': {
        "ENGINE": os.environ.get("SQL_ENGINE", "django.contrib.gis.db.backends.postgis"),
        "NAME": os.environ.get("SQL_DATABASE", "tekdb"),
        "USER": os.environ.get("SQL_USER", "postgres"),
        "PASSWORD": os.environ.get("SQL_PASSWORD", None),
        "HOST": os.environ.get("SQL_HOST", None),
        "PORT": os.environ.get("SQL_PORT", None),
    }
}

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

#Registration

ACCOUNT_ACTIVATION_DAYS = 14

REGISTRATION_OPEN = False


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Los_Angeles'

USE_I18N = True

USE_L10N = True

USE_TZ = True

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

MEDIA_URL = '/media/'

MEDIA_ROOT = os.path.join(BASE_DIR, "media")

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, "static")

# STATICFILES_DIRS = [
#    os.path.join(BASE_DIR, "explore", "static"),
#    os.path.join(BASE_DIR, "TEKDB", "static"),
# ]

### DJANGO-REGISTRATION SETTINGS ###
REGISTRATION_OPEN = True

SEARCH_CATEGORIES = [
    'all',
    'places',
    'resources',
    'activities',
    'citations',
    'media',
]
#Locality? People?

AUTH_USER_MODEL = 'Accounts.Users'

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Full',
    },
    'custom': {
        'toolbar': 'Custom',
        'toolbar_Custom': [
            ['Format'],
            ['Bold', 'Italic', 'Underline','Strike','Subscript','Superscript'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            ['Link', 'Unlink'],
            ['Image','Table','HorizontalRule','SpecialChar'],
            [ 'TextColor','BGColor' ],
            ['Undo','Redo'],
            ['RemoveFormat', 'Source']
        ]
    }
}

RECORD_ICONS = {
    'activity': '/static/explore/img/activity.png',
    'citation': '/static/explore/img/citation.png',
    'place': '/static/explore/img/place.png',
    'media': '/static/explore/img/media.png',
    'event': '/static/explore/img/activity.png',
    'resource': '/static/explore/img/resource.png',
}

# Set this in local_settings.py
DATABASE_GEOGRAPHY = {
    'default_lon': -11131949.08,
    'default_lat': 4865942.28,
    'default_zoom': 3,
    'map_template': 'gis/admin/ol2osm.html'
}

ADMIN_SITE_HEADER = 'TEK DB Admin'

from TEKDB.local_settings import *

### HEROKU SETTINGS (NOT FOR PRODUCTION!!!)

### Update database configuration with $DATABASE_URL.
#
# import dj_database_url
# db_from_env = dj_database_url.config(conn_max_age=500)
# DATABASES['default'].update(db_from_env)
#
# STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'
