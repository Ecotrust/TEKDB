# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-06-11 02:31
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Lookup', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Citations',
            fields=[
                ('enteredbyname', models.CharField(blank=True, db_column='EnteredByName', max_length=25, null=True, verbose_name='entered by name')),
                ('enteredbytribe', models.CharField(blank=True, db_column='EnteredByTribe', max_length=100, null=True, verbose_name='entered by tribe')),
                ('enteredbytitle', models.CharField(blank=True, db_column='EnteredByTitle', max_length=100, null=True, verbose_name='entered by title')),
                ('enteredbydate', models.DateTimeField(auto_now_add=True, db_column='EnteredByDate', null=True, verbose_name='entered by date')),
                ('modifiedbyname', models.CharField(blank=True, db_column='ModifiedByName', max_length=25, null=True, verbose_name='modified by name')),
                ('modifiedbytitle', models.CharField(blank=True, db_column='ModifiedByTitle', max_length=100, null=True, verbose_name='modified by title')),
                ('modifiedbytribe', models.CharField(blank=True, db_column='ModifiedByTribe', max_length=100, null=True, verbose_name='modified by tribe')),
                ('modifiedbydate', models.DateTimeField(auto_now=True, db_column='ModifiedByDate', null=True, verbose_name='modified by date')),
                ('citationid', models.AutoField(db_column='CitationID', primary_key=True, serialize=False)),
                ('referencetext', models.CharField(blank=True, db_column='ReferenceText', max_length=50, null=True, verbose_name='description')),
                ('authorprimary', models.CharField(blank=True, db_column='AuthorPrimary', max_length=255, null=True, verbose_name='primary author')),
                ('authorsecondary', models.CharField(blank=True, db_column='AuthorSecondary', max_length=255, null=True, verbose_name='secondary author')),
                ('placeofinterview', models.CharField(blank=True, db_column='PlaceofInterview', max_length=255, null=True, verbose_name='place of interview')),
                ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
                ('title', models.TextField(blank=True, db_column='Title', null=True)),
                ('seriestitle', models.CharField(blank=True, db_column='SeriesTitle', max_length=255, null=True, verbose_name='series title')),
                ('seriesvolume', models.CharField(blank=True, db_column='SeriesVolume', max_length=50, null=True, verbose_name='series volume')),
                ('serieseditor', models.CharField(blank=True, db_column='SeriesEditor', max_length=255, null=True, verbose_name='series editor')),
                ('publisher', models.CharField(blank=True, db_column='Publisher', max_length=100, null=True)),
                ('publishercity', models.CharField(blank=True, db_column='PublisherCity', max_length=255, null=True, verbose_name='city')),
                ('preparedfor', models.CharField(blank=True, db_column='PreparedFor', max_length=100, null=True, verbose_name='prepared_for')),
                ('comments', models.TextField(blank=True, db_column='Comments', null=True)),
            ],
            options={
                'verbose_name': 'Citation',
                'verbose_name_plural': 'Citations',
                'db_table': 'Citations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('enteredbyname', models.CharField(blank=True, db_column='EnteredByName', max_length=25, null=True, verbose_name='entered by name')),
                ('enteredbytribe', models.CharField(blank=True, db_column='EnteredByTribe', max_length=100, null=True, verbose_name='entered by tribe')),
                ('enteredbytitle', models.CharField(blank=True, db_column='EnteredByTitle', max_length=100, null=True, verbose_name='entered by title')),
                ('enteredbydate', models.DateTimeField(auto_now_add=True, db_column='EnteredByDate', null=True, verbose_name='entered by date')),
                ('modifiedbyname', models.CharField(blank=True, db_column='ModifiedByName', max_length=25, null=True, verbose_name='modified by name')),
                ('modifiedbytitle', models.CharField(blank=True, db_column='ModifiedByTitle', max_length=100, null=True, verbose_name='modified by title')),
                ('modifiedbytribe', models.CharField(blank=True, db_column='ModifiedByTribe', max_length=100, null=True, verbose_name='modified by tribe')),
                ('modifiedbydate', models.DateTimeField(auto_now=True, db_column='ModifiedByDate', null=True, verbose_name='modified by date')),
                ('localityid', models.AutoField(db_column='LocalityID', primary_key=True, serialize=False)),
                ('englishname', models.CharField(blank=True, db_column='EnglishName', max_length=255, null=True, verbose_name='english name')),
                ('indigenousname', models.CharField(blank=True, db_column='IndigenousName', max_length=255, null=True, verbose_name='indigenous name')),
            ],
            options={
                'verbose_name': 'Locality',
                'verbose_name_plural': 'Localities',
                'db_table': 'Locality',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('enteredbyname', models.CharField(blank=True, db_column='EnteredByName', max_length=25, null=True, verbose_name='entered by name')),
                ('enteredbytribe', models.CharField(blank=True, db_column='EnteredByTribe', max_length=100, null=True, verbose_name='entered by tribe')),
                ('enteredbytitle', models.CharField(blank=True, db_column='EnteredByTitle', max_length=100, null=True, verbose_name='entered by title')),
                ('enteredbydate', models.DateTimeField(auto_now_add=True, db_column='EnteredByDate', null=True, verbose_name='entered by date')),
                ('modifiedbyname', models.CharField(blank=True, db_column='ModifiedByName', max_length=25, null=True, verbose_name='modified by name')),
                ('modifiedbytitle', models.CharField(blank=True, db_column='ModifiedByTitle', max_length=100, null=True, verbose_name='modified by title')),
                ('modifiedbytribe', models.CharField(blank=True, db_column='ModifiedByTribe', max_length=100, null=True, verbose_name='modified by tribe')),
                ('modifiedbydate', models.DateTimeField(auto_now=True, db_column='ModifiedByDate', null=True, verbose_name='modified by date')),
                ('mediaid', models.AutoField(db_column='MediaID', primary_key=True, serialize=False)),
                ('medianame', models.CharField(blank=True, db_column='MediaName', max_length=255, null=True, verbose_name='name')),
                ('mediadescription', models.TextField(blank=True, db_column='MediaDescription', null=True, verbose_name='description')),
                ('medialink', models.CharField(blank=True, db_column='MediaLink', max_length=255, null=True, verbose_name='link')),
            ],
            options={
                'verbose_name': 'Medium',
                'verbose_name_plural': 'Media',
                'db_table': 'Media',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Places',
            fields=[
                ('enteredbyname', models.CharField(blank=True, db_column='EnteredByName', max_length=25, null=True, verbose_name='entered by name')),
                ('enteredbytribe', models.CharField(blank=True, db_column='EnteredByTribe', max_length=100, null=True, verbose_name='entered by tribe')),
                ('enteredbytitle', models.CharField(blank=True, db_column='EnteredByTitle', max_length=100, null=True, verbose_name='entered by title')),
                ('enteredbydate', models.DateTimeField(auto_now_add=True, db_column='EnteredByDate', null=True, verbose_name='entered by date')),
                ('modifiedbyname', models.CharField(blank=True, db_column='ModifiedByName', max_length=25, null=True, verbose_name='modified by name')),
                ('modifiedbytitle', models.CharField(blank=True, db_column='ModifiedByTitle', max_length=100, null=True, verbose_name='modified by title')),
                ('modifiedbytribe', models.CharField(blank=True, db_column='ModifiedByTribe', max_length=100, null=True, verbose_name='modified by tribe')),
                ('modifiedbydate', models.DateTimeField(auto_now=True, db_column='ModifiedByDate', null=True, verbose_name='modified by date')),
                ('placeid', models.AutoField(db_column='PlaceID', primary_key=True, serialize=False)),
                ('indigenousplacename', models.CharField(blank=True, db_column='IndigenousPlaceName', max_length=255, null=True, verbose_name='indigenous name')),
                ('indigenousplacenamemeaning', models.CharField(blank=True, db_column='IndigenousPlaceNameMeaning', max_length=255, null=True, verbose_name='english translation')),
                ('englishplacename', models.CharField(blank=True, db_column='EnglishPlaceName', max_length=255, null=True, verbose_name='english name')),
                ('islocked', models.BooleanField(db_column='IsLocked', default=False, verbose_name='locked?')),
            ],
            options={
                'verbose_name': 'Place',
                'verbose_name_plural': 'Places',
                'db_table': 'Places',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Resources',
            fields=[
                ('enteredbyname', models.CharField(blank=True, db_column='EnteredByName', max_length=25, null=True, verbose_name='entered by name')),
                ('enteredbytribe', models.CharField(blank=True, db_column='EnteredByTribe', max_length=100, null=True, verbose_name='entered by tribe')),
                ('enteredbytitle', models.CharField(blank=True, db_column='EnteredByTitle', max_length=100, null=True, verbose_name='entered by title')),
                ('enteredbydate', models.DateTimeField(auto_now_add=True, db_column='EnteredByDate', null=True, verbose_name='entered by date')),
                ('modifiedbyname', models.CharField(blank=True, db_column='ModifiedByName', max_length=25, null=True, verbose_name='modified by name')),
                ('modifiedbytitle', models.CharField(blank=True, db_column='ModifiedByTitle', max_length=100, null=True, verbose_name='modified by title')),
                ('modifiedbytribe', models.CharField(blank=True, db_column='ModifiedByTribe', max_length=100, null=True, verbose_name='modified by tribe')),
                ('modifiedbydate', models.DateTimeField(auto_now=True, db_column='ModifiedByDate', null=True, verbose_name='modified by date')),
                ('resourceid', models.AutoField(db_column='ResourceID', primary_key=True, serialize=False)),
                ('commonname', models.CharField(blank=True, db_column='CommonName', max_length=255, null=True, unique=True, verbose_name='common name')),
                ('indigenousname', models.CharField(blank=True, db_column='IndigenousName', max_length=255, null=True, verbose_name='indigenous name')),
                ('genus', models.CharField(blank=True, db_column='Genus', max_length=255, null=True, verbose_name='genus')),
                ('species', models.CharField(blank=True, db_column='Species', max_length=255, null=True)),
                ('specific', models.BooleanField(db_column='Specific', default=False)),
                ('islocked', models.BooleanField(db_column='IsLocked', default=False, verbose_name='locked?')),
            ],
            options={
                'verbose_name': 'Resource',
                'verbose_name_plural': 'Resources',
                'db_table': 'Resources',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ResourcesActivityEvents',
            fields=[
                ('enteredbyname', models.CharField(blank=True, db_column='EnteredByName', max_length=25, null=True, verbose_name='entered by name')),
                ('enteredbytribe', models.CharField(blank=True, db_column='EnteredByTribe', max_length=100, null=True, verbose_name='entered by tribe')),
                ('enteredbytitle', models.CharField(blank=True, db_column='EnteredByTitle', max_length=100, null=True, verbose_name='entered by title')),
                ('enteredbydate', models.DateTimeField(auto_now_add=True, db_column='EnteredByDate', null=True, verbose_name='entered by date')),
                ('modifiedbyname', models.CharField(blank=True, db_column='ModifiedByName', max_length=25, null=True, verbose_name='modified by name')),
                ('modifiedbytitle', models.CharField(blank=True, db_column='ModifiedByTitle', max_length=100, null=True, verbose_name='modified by title')),
                ('modifiedbytribe', models.CharField(blank=True, db_column='ModifiedByTribe', max_length=100, null=True, verbose_name='modified by tribe')),
                ('modifiedbydate', models.DateTimeField(auto_now=True, db_column='ModifiedByDate', null=True, verbose_name='modified by date')),
                ('resourceactivityid', models.AutoField(db_column='ResourceActivityID', primary_key=True, serialize=False)),
                ('relationshipdescription', models.TextField(blank=True, db_column='RelationshipDescription', null=True, verbose_name='relationship description')),
                ('activitylongdescription', models.TextField(blank=True, db_column='ActivityLongDescription', null=True, verbose_name='full activity description')),
                ('gear', models.CharField(blank=True, db_column='Gear', max_length=255, null=True)),
                ('customaryuse', models.CharField(blank=True, db_column='CustomaryUse', max_length=255, null=True, verbose_name='customary use')),
                ('timingdescription', models.CharField(blank=True, db_column='TimingDescription', max_length=255, null=True, verbose_name='timing description')),
                ('islocked', models.BooleanField(db_column='IsLocked', default=False, verbose_name='locked?')),
                ('activityshortdescription', models.ForeignKey(blank=True, db_column='ActivityShortDescription', max_length=255, null=True, on_delete=django.db.models.deletion.CASCADE, to='Lookup.LookupActivity', verbose_name='activity type')),
                ('participants', models.ForeignKey(blank=True, db_column='Participants', max_length=50, null=True, on_delete=django.db.models.deletion.CASCADE, to='Lookup.LookupParticipants')),
                ('partused', models.ForeignKey(blank=True, db_column='PartUsed', max_length=255, null=True, on_delete=django.db.models.deletion.CASCADE, to='Lookup.LookupPartUsed', verbose_name='part used')),
            ],
            options={
                'verbose_name': 'Activity',
                'verbose_name_plural': 'Activities',
                'db_table': 'ResourcesActivityEvents',
                'managed': True,
            },
        ),
    ]
